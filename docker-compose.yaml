version: '3.9'

services:
  postgres-db:
    image: postgres
    restart: always
    container_name: mts-sm-postgres
    environment:
      POSTGRES_USER: mts-sm-local
      POSTGRES_PASSWORD: mts-sm-local
      POSTGRES_DB: mts-sm-local
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mts_sm_network

  minio:
    container_name: "mts-sm-fs"
    image: minio/minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY=access_key
      - MINIO_SECRET_KEY=secret_key
      - MINIO_REGION=us-east-1
    volumes:
      - "~/.data/mts-sm/minio/data:/data"
    command: server /minio-image/storage --console-address :9001
    networks:
      - mts_sm_network

  rest-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest-server
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - minio
      - postgres-db
      - prometheus
    networks:
      - mts_sm_network
    environment:
      - ENV=local-dockerized

  prometheus:
    image: prom/prometheus:v2.40.7
    container_name: prometheus
    volumes:
      - ./assets/configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - mts_sm_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    networks:
      - mts_sm_network

volumes:
  postgres-data:
  grafana_data:
  prometheus_data:

networks:
  mts_sm_network:
    driver: bridge